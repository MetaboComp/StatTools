% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mvImp.R
\name{mvImp}
\alias{mvImp}
\title{Perform random forest imputation of missing values}
\usage{
mvImp(
  MAT,
  method = c("RF", "PLS"),
  maxIter = 15,
  tolerance = 0.01,
  guess = NULL,
  forceZero = FALSE,
  rfMeth = "rf",
  ntree = 100,
  mtry = 5,
  nComp = 2,
  verbose = FALSE,
  parallel = FALSE
)
}
\arguments{
\item{MAT}{Indata matrix}

\item{method}{'PLS' or 'RF}

\item{maxIter}{Maximum number of iterations}

\item{tolerance}{Tolerance criterion (between two iterations) to accept imputed value}

\item{guess}{1st guess ("median", i.e. median per feature; "minVar", minimum per variable (default); "minTotal", minimum of all variables; A matrix (imputed/full data matrix))}

\item{forceZero}{Boolean for whether to force a lower imputation limit to zero (e.g. normal-scale concentrations & PLS; defaults to FALSE)}

\item{rfMeth}{Which RF implementation to choose ('rf' (randomForest; default), 'ranger' or 'Rborist')}

\item{ntree}{Number of trees per forest}

\item{mtry}{Number of variables to choose from at each node}

\item{nComp}{Number of PLS components (defaults to 2)}

\item{verbose}{Boolean for verbose output}

\item{parallel}{Whether to perform imputation in parallel (register backend if TRUE!)}
}
\value{
Object (list)
}
\description{
Perform random forest imputation of missing values
}
\examples{
MAT=matrix(runif(100000),nrow=40) # Generate synthetic (random) data
MAT[sample(1:100000,size = 1000)] <- NA # Punch 1000 random holes in the data
library(doParallel)
nCore=detectCores()-1
cl=makeCluster(nCore)
registerDoParallel(cl)
ImputationObject <- rfImp(MAT = MAT, tolerance=0.05, maxIter=5) # Quick'n'Dirty settings for imputation
stopCluster(cl)
MAT_Imp <- ImputationObject$peakTable
}
