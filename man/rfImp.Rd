% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rfImp.R
\name{rfImp}
\alias{rfImp}
\title{Perform random forest imputation of missing values}
\usage{
rfImp(MAT, maxIter = 15, tolerance = 0.01, ntree = 100, mtry = 5,
  guess = NULL, verbose = F, parallel = F)
}
\arguments{
\item{MAT}{Indata matrix}

\item{maxIter}{Maximum number of iterations}

\item{tolerance}{Tolerance criterion (between two iterations) to accept imputed value}

\item{ntree}{Number of trees per forest}

\item{mtry}{Number of variables to choose from at each node}

\item{guess}{1st guess ("median", i.e. median per feature; "minVar", minimum per variable (default); "minTotal", minimum of all variables; A matrix (imputed/full data matrix))}

\item{verbose}{Boolean for verbose output}

\item{parallel}{Whether to perform imputation in parallel (register backend if TRUE!)}
}
\value{
Object (list)
}
\description{
Perform random forest imputation of missing values
}
\examples{
MAT=matrix(runif(100000),nrow=40) # Generate synthetic (random) data
MAT[sample(1:100000,size = 1000)] <- NA # Punch 1000 random holes in the data
library(doParallel)
nCore=detectCores()-1
cl=makeCluster(nCore)
registerDoParallel(cl)
ImputationObject <- rfImp(MAT = MAT, tolerance=0.05, maxIter=5) # Quick'n'Dirty settings for imputation
stopCluster(cl)
MAT_Imp <- ImputationObject$peakTable
}
